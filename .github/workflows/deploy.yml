name: Build and Deploy

on:
  push:
    # branches: ["prod"]
    branches: ["chore/GV-10"]

env:
  working-directory: .
  AWS_REGION: ap-northeast-2                   
  AWS_SG_NAME: ggv-sg
  AWS_SG_ID: sg-0aa9645a45ea4c2a8

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    
    - name: Public IP
      id: publicip
      uses: haythem/public-ip@v1.3

    - name: Checkout Repository and Submodules
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.ACTIONS_SECRET_TOKEN }}
        submodules: true

    - name: JDK 21 설정
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github 
        settings-path: ${{ github.workspace }} 

    - name: Gradle로 빌드
      run: |
        git submodule update --init --recursive
        chmod +x gradlew
        ./gradlew clean build
        
    - name: AWS 자격 증명 설정
      uses: aws-actions/configure-aws-credentials@v1
      with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} 
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
         aws-region: ${{env.AWS_REGION}}

    - name: 보안 그룹에 Github Actions IP 추가
      run: |
        aws ec2 authorize-security-group-ingress --group-id ${{ env.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.publicip.outputs.ip }}/32

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ghcr.io/GGV-Hub/GGV-api:release

    - name: Transfer Deploy Script use SCP
      uses: appleboy/scp-action@master
      with:
        username: ubuntu
        host: ${{ secrets.AWS_HOST }}
        key: ${{ secrets.AWS_KEY }}
        source: "deploy.sh"
        target: "/home/ubuntu/deploy"

    - name: 원격 SSH 명령 실행
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ubuntu
        key: ${{ secrets.AWS_KEY }}
        script: |
          cd deploy/
          chmod +x ./deploy.sh
          ./deploy.sh

    - name: 보안 그룹에서 Github Actions IP 제거
      run: |
         aws ec2 revoke-security-group-ingress  --group-id ${{ env.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.publicip.outputs.ip }}/32
